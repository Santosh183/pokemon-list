{"version":3,"sources":["contexts/LayoutContext.tsx","components/Nav/NavOption.tsx","components/Nav/Nav.tsx","hooks/useGetPokemons.ts","components/generic/Loader.tsx","components/PokemonList/PokemonListItem.tsx","components/PokemonList/Search.tsx","components/PokemonList/PokemonList.tsx","app/client.ts","screens/ListPage.tsx","README.md","screens/Home.tsx","hooks/useGetPokemonDetails.ts","components/PokemonDetails/DetailFields.tsx","components/PokemonDetails/PokemonDetails.tsx","app/App.tsx","app/reportWebVitals.ts","index.tsx"],"names":["LayoutContext","createContext","layout","navCollapsed","setLayout","LayoutProvider","_ref","children","useState","_jsx","Provider","value","NavOption","to","icon","name","classes","useStyles","_jsxs","NavLink","className","_ref2","isActive","clsx","root","active","title","text","createUseStyles","width","display","alignItems","boxSizing","height","textDecoration","overflow","background","filter","marginLeft","minWidth","justifyContent","Nav","useLayout","useContext","toggleNav","useToggleNav","_Fragment","main","src","img","bottom","expandBtn","onClick","btnIcon","btnTxt","spacer","zIndex","position","left","top","props","flexDirection","transition","flex","paddingLeft","paddingRight","paddingTop","paddingBottom","padding","borderTop","cursor","transform","GET_POKEMONS","gql","Loader","spinnerContainer","spinner","transformOrigin","animation","content","borderRadius","animationDelay","PokemonListItem","pkmn","avatar","image","info","number","types","join","fontSize","fontFamily","color","gap","extend","Search","handleSearch","searchContainer","onInput","$event","currentTarget","type","id","border","boxShadow","PokemonList","pokemons","loading","useGetPokemons","data","queryRes","useQuery","variables","first","useMemo","pokemonOptions","map","p","label","defaultState","filteredPokemons","setFilteredPokemons","isFiltering","setIsFiltering","navigate","useNavigate","useEffect","searchString","filteredData","toLowerCase","includes","trim","list","length","state","listItem","Outlet","textAlign","client","ApolloClient","link","ApolloLink","from","HttpLink","uri","cache","InMemoryCache","ListPage","Home","markdown","setMarkdown","fetch","README","then","res","ReactMarkdown","minHeight","margin","borderBottom","borderLeft","borderRight","lineHeight","marginTop","GET_POKEMON_DETAILS","DetailFields","pokemonDetails","fieldDetails","weight","minimum","maximum","classification","resistant","weaknesses","maxCP","maxHP","field","PokemonDetails","_location$state","_location$state2","location","useLocation","params","useParams","useGetPokemonDetails","pokemon","modalContainer","e","stopPropagation","modalBody","details","alt","divider","right","scrollableArea","App","ApolloProvider","BrowserRouter","Routes","Route","path","element","Navigate","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af033502.chunk.js","sourcesContent":["import React, {\r\n  createContext,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useContext,\r\n  useState,\r\n} from 'react';\r\n\r\ntype Layout = { navCollapsed: boolean };\r\n\r\ntype LayoutContextValue = {\r\n  layout: Layout;\r\n  setLayout: Dispatch<SetStateAction<Layout>>;\r\n};\r\n\r\nconst LayoutContext = createContext<LayoutContextValue>({\r\n  layout: { navCollapsed: false },\r\n  setLayout: () => null,\r\n});\r\n\r\nexport const LayoutProvider: React.FC = ({ children }) => {\r\n  const [layout, setLayout] = useState({\r\n    navCollapsed: true,\r\n  });\r\n\r\n  return (\r\n    <LayoutContext.Provider value={{ layout, setLayout }}>\r\n      {children}\r\n    </LayoutContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useLayout = () => {\r\n  const { layout } = useContext(LayoutContext);\r\n  return layout;\r\n};\r\n\r\nexport const useToggleNav = () => {\r\n  const { setLayout } = useContext(LayoutContext);\r\n  return () =>\r\n    setLayout((layout) => ({ ...layout, navCollapsed: !layout.navCollapsed }));\r\n};\r\n","import clsx from 'clsx';\r\nimport React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ninterface NavOptionProps {\r\n  to: string;\r\n  icon: string;\r\n  name: string;\r\n}\r\n\r\nexport const NavOption: React.FC<NavOptionProps> = ({\r\n  to,\r\n  icon,\r\n  name,\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const getRootClassName = ({ isActive }: { isActive: boolean }) => {\r\n    return clsx(classes.root, {\r\n      [classes.active]: isActive,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <NavLink to={to} className={getRootClassName} title={name}>\r\n      <span className={clsx(classes.icon, 'material-icons')}>{icon}</span>\r\n      <span className={classes.text}>{children}</span>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      width: '100%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      boxSizing: 'border-box',\r\n      height: '56px',\r\n      textDecoration: 'none',\r\n      overflow: 'hidden',\r\n      background: '#131924',\r\n      '&:hover': {\r\n        filter: 'brightness(120%)',\r\n      },\r\n      '&:active': {\r\n        filter: 'brightness(130%)',\r\n      },\r\n    },\r\n    text: {\r\n      marginLeft: '18px',\r\n    },\r\n    active: {\r\n      background: '#171E2b',\r\n      '&:hover': {\r\n        filter: 'brightness(110%)',\r\n      },\r\n      '&:active': {\r\n        filter: 'brightness(120%)',\r\n      },\r\n    },\r\n    icon: {\r\n      boxSizing: 'border-box',\r\n      width: '45px',\r\n      minWidth: '45px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n  },\r\n  { name: 'NavOption' }\r\n);\r\n","import { createUseStyles } from 'react-jss';\r\nimport { useLayout, useToggleNav } from '../../contexts';\r\nimport clsx from 'clsx';\r\nimport { NavOption } from './NavOption';\r\n\r\nexport const Nav = () => {\r\n  const { navCollapsed } = useLayout();\r\n  const classes = useStyles({ navCollapsed });\r\n  const toggleNav = useToggleNav();\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <div className={classes.main}>\r\n          <div className={classes.title}>\r\n            <img src=\"/pokeball-white.png\" className={classes.img} />\r\n            <h3>Pokémon</h3>\r\n          </div>\r\n          <NavOption to=\"/pokemon-list\" icon=\"home\" name=\"Home\">\r\n            Home\r\n          </NavOption>\r\n          <NavOption to=\"/pokemon-list/pokemon\" icon=\"list\" name=\"List\">\r\n            List\r\n          </NavOption>\r\n        </div>\r\n        <div className={classes.bottom}>\r\n          <button className={classes.expandBtn} onClick={() => toggleNav()}>\r\n            <span\r\n              title={navCollapsed ? 'Expand' : 'Collapse'}\r\n              className={clsx(classes.btnIcon, 'material-icons')}\r\n            >\r\n              {navCollapsed ? 'unfold_more' : 'unfold_less'}\r\n            </span>\r\n            <span className={classes.btnTxt}>Collapse</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className={classes.spacer} />\r\n    </>\r\n  );\r\n};\r\n\r\ninterface StyleProps {\r\n  navCollapsed: boolean;\r\n}\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      zIndex: 100,\r\n      background: '#131924',\r\n      position: 'fixed',\r\n      left: 0,\r\n      top: 0,\r\n      bottom: 0,\r\n      width: (props: StyleProps) => (props.navCollapsed ? '81px' : '320px'),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      transition: 'width .2s ease-in-out',\r\n      overflow: 'hidden',\r\n    },\r\n    spacer: {\r\n      height: '100%',\r\n      width: (props: StyleProps) => (props.navCollapsed ? '81px' : '320px'),\r\n      transition: 'width .2s ease-in-out',\r\n    },\r\n    main: {\r\n      flex: '1',\r\n      '& > *': {\r\n        paddingLeft: '18px',\r\n        paddingRight: '18px',\r\n      },\r\n    },\r\n    title: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      '& h3': {\r\n        marginLeft: '18px',\r\n      },\r\n    },\r\n    img: {\r\n      width: '48px',\r\n      paddingTop: '12px',\r\n      paddingBottom: '12px',\r\n      filter: 'brightness(75%)',\r\n    },\r\n    bottom: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      padding: '12px 18px',\r\n      borderTop: '2px solid rgba(255, 255, 255, .1)',\r\n    },\r\n    expandBtn: {\r\n      background: 'transparent',\r\n      position: 'relative',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-start',\r\n      width: '100%',\r\n      cursor: 'pointer',\r\n      '&:hover': {\r\n        background: 'rgba(255,255,255,.04)',\r\n      },\r\n      '&:active': {\r\n        background: 'rgba(255,255,255,.06)',\r\n      },\r\n      overflow: 'hidden',\r\n    },\r\n    btnIcon: {\r\n      transform: 'rotate(90deg)',\r\n    },\r\n    btnTxt: {\r\n      marginLeft: '18px',\r\n      transition: 'all 0s ease-in-out .2s',\r\n    },\r\n  },\r\n  { name: 'Nav' }\r\n);\r\n","import { useMemo } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { Pokemon } from '../models/pokemonModels';\r\n\r\n\r\nexport type PokemonOption = {\r\n  value: Pokemon['id'];\r\n  label: Pokemon['name'];\r\n};\r\n\r\nexport const GET_POKEMONS = gql`\r\n  query pokemons($first: Int!) {\r\n    pokemons(first: $first) {\r\n      id\r\n      name\r\n      number\r\n      types\r\n      image\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetPokemons = () => {\r\n  const { data, ...queryRes } = useQuery(GET_POKEMONS, {\r\n    variables: {\r\n      first: 151, // Keep hard coded\r\n    },\r\n  });\r\n\r\n  const pokemons: Pokemon[] = useMemo(() => data?.pokemons || [], [data]);\r\n\r\n  const pokemonOptions: PokemonOption[] = useMemo(\r\n    () => pokemons.map((p: Pokemon) => ({ value: p.id, label: p.name })),\r\n    [pokemons]\r\n  );\r\n\r\n  return {\r\n    pokemons,\r\n    pokemonOptions,\r\n    ...queryRes,\r\n  };\r\n};\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nexport const Loader = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.spinnerContainer}>\r\n            <div className={classes.spinner} >\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div >\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nconst useStyles = createUseStyles(\r\n    {\r\n        \"@global\": {\r\n            '@keyframes spinner': {\r\n                '0%': {\r\n                    'opacity': '1'\r\n                },\r\n                '100%': {\r\n                    'opacity': '0'\r\n                }\r\n            },\r\n        },\r\n        spinnerContainer: {\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'relative'\r\n        },\r\n        spinner: {\r\n            display: 'inline-block',\r\n            position: 'absolute',\r\n            width: '80px',\r\n            height: '80px',\r\n            top: '50%',\r\n            left: '50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            '& div': {\r\n                transformOrigin: '40px 40px',\r\n                animation: 'spinner 1.2s linear infinite',\r\n                '&:after': {\r\n                    content: '\" \"',\r\n                    display: 'block',\r\n                    position: 'absolute',\r\n                    top: '3px',\r\n                    left: '37px',\r\n                    width: '5px',\r\n                    height: '15px',\r\n                    borderRadius: '20%',\r\n                    background: '#fff'\r\n                },\r\n                '&:nth-child(1)': {\r\n                    transform: 'rotate(0deg)',\r\n                    animationDelay: '-1.1s'\r\n                },\r\n                '&:nth-child(2)': {\r\n                    transform: 'rotate(30deg)',\r\n                    animationDelay: '-1s'\r\n                },\r\n                '&:nth-child(3)': {\r\n                    transform: 'rotate(60deg)',\r\n                    animationDelay: '-0.9s'\r\n                },\r\n                '&:nth-child(4)': {\r\n                    transform: 'rotate(90deg)',\r\n                    animationDelay: '-0.8s'\r\n                },\r\n                '&:nth-child(5)': {\r\n                    transform: 'rotate(120deg)',\r\n                    animationDelay: '-0.7s'\r\n                },\r\n                '&:nth-child(6)': {\r\n                    transform: 'rotate(150deg)',\r\n                    animationDelay: '-0.6s'\r\n                },\r\n                '&:nth-child(7)': {\r\n                    transform: 'rotate(180deg)',\r\n                    animationDelay: '-0.5s'\r\n                },\r\n                '&:nth-child(8)': {\r\n                    transform: 'rotate(210deg)',\r\n                    animationDelay: '-0.4s'\r\n                },\r\n                '&:nth-child(9)': {\r\n                    transform: 'rotate(240deg)',\r\n                    animationDelay: '-0.3s'\r\n                },\r\n                '&:nth-child(10)': {\r\n                    transform: 'rotate(270deg)',\r\n                    animationDelay: '-0.2s'\r\n                },\r\n                '&:nth-child(11)': {\r\n                    transform: 'rotate(300deg)',\r\n                    animationDelay: '-0.1s'\r\n                },\r\n                '&:nth-child(12)': {\r\n                    transform: 'rotate(330deg)',\r\n                    animationDelay: '-0.0s'\r\n                },\r\n\r\n            }\r\n        }\r\n\r\n    },\r\n    { name: 'Loader' }\r\n);\r\n","\r\nimport { createUseStyles } from 'react-jss';\r\nimport { Pokemon } from '../../models/pokemonModels';\r\n\r\n\r\ninterface PokemonListItemProps {\r\n    pkmn: Pokemon\r\n}\r\n\r\n\r\nexport const PokemonListItem: React.FC<PokemonListItemProps> = ({ pkmn }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.avatar}>\r\n                <img src={pkmn.image} />\r\n            </div>\r\n            <div className={classes.info}>\r\n                <div className={classes.name}>{pkmn.name}</div>\r\n                <div className={classes.number}>\r\n                    Number:\r\n                    <span>{pkmn.number}</span>\r\n                </div>\r\n                <div className={classes.types}>\r\n                    Types:\r\n                    <span>{pkmn.types.join(', ')}</span>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n    {\r\n        avatar: {\r\n            '& img': {\r\n                width: '100px',\r\n                height: '100px',\r\n                borderRadius: '50%'\r\n            }\r\n        },\r\n        info: {\r\n            display: 'flex',\r\n            alignItems: 'flex-start',\r\n            flexDirection: 'column',\r\n            fontSize: '15px'\r\n        },\r\n        name: {\r\n            fontSize: '20px',\r\n            fontFamily: 'cursive',\r\n            paddingBottom: '10px'\r\n        },\r\n        number: {\r\n            display: 'flex',\r\n            color: '#00acc1',\r\n            gap: '10px',\r\n            alignItems: 'center',\r\n            '& span': {\r\n                color: 'rgba(255,255,255,.68)',\r\n                fontSize: '13px'\r\n            }\r\n        },\r\n        types: {\r\n            extend: 'number'\r\n        },\r\n        '@media only screen and (max-width: 768px)': {\r\n            avatar: {\r\n                '& img': {\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: '50%'\r\n                }\r\n            },\r\n            info: {\r\n                fontSize: '12px'\r\n            },\r\n            name: {\r\n                fontSize: '15px',\r\n                paddingBottom: '5px'\r\n            },\r\n        }\r\n    },\r\n    { name: 'PokemonListItem' }\r\n);\r\n","\r\nimport { createUseStyles } from 'react-jss';\r\n\r\ninterface SearchProps {\r\n    handleSearch: Function\r\n}\r\n\r\n\r\nexport const Search: React.FC<SearchProps> = ({\r\n    handleSearch\r\n}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.searchContainer}>\r\n            <span className=\"material-icons\">search</span>\r\n            <input\r\n                onInput={($event: React.FormEvent<HTMLInputElement>) => handleSearch($event.currentTarget.value)}\r\n                type=\"search\"\r\n                name=\"search\"\r\n                id=\"search\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n    {\r\n        searchContainer: {\r\n            padding: '20px 32px',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '40px',\r\n            gap: '10px',\r\n            '& span': {\r\n                width: '20px',\r\n                height: '20px',\r\n            },\r\n            '& input': {\r\n                padding: '5px',\r\n                background: 'inherit',\r\n                border: 'none',\r\n                boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n                height: '100%',\r\n                width: 'calc( 30% - 20px )',\r\n            }\r\n        },\r\n        '@media only screen and (max-width: 768px)': {\r\n            searchContainer: {\r\n                padding: '10px',\r\n                gap: '10px',\r\n                '& span': {\r\n                    width: '15px',\r\n                    height: '15px'\r\n                },\r\n                '& input': {\r\n                    padding: '5px',\r\n                    background: 'inherit',\r\n                    border: 'none',\r\n                    boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n                    height: '100%',\r\n                    width: 'calc( 90% - 20px )',\r\n                }\r\n            },\r\n        }\r\n\r\n    },\r\n    { name: 'Search' }\r\n);\r\n","import { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss'\r\nimport { Outlet, useNavigate } from 'react-router-dom';\r\nimport { useGetPokemons } from '../../hooks/useGetPokemons';\r\nimport { Pokemon } from '../../models/pokemonModels';\r\nimport { Loader } from '../generic/Loader';\r\nimport { PokemonListItem } from './PokemonListItem';\r\nimport { Search } from './Search';\r\n\r\nexport const PokemonList = () => {\r\n  const classes = useStyles();\r\n  const { pokemons, loading } = useGetPokemons();\r\n  const defaultState: Pokemon[] = pokemons;\r\n  const [filteredPokemons, setFilteredPokemons] = useState(defaultState);\r\n  const [isFiltering, setIsFiltering] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const search = (searchString: string) => {\r\n    const filteredData = pokemons.filter(pkmn => pkmn.name.toLowerCase().includes(searchString.trim().toLowerCase()));\r\n    setIsFiltering(true); // make sure initial unnecssary \"No Pokemans available!\" is not displayed when filteirng is in process\r\n    setFilteredPokemons(filteredData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFilteredPokemons(pokemons);\r\n  }, [pokemons]);\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <Search handleSearch={search} />\r\n      <div className={`${classes.root} ${classes.list}`}>\r\n        {loading && <Loader />}\r\n        {!loading && filteredPokemons.length === 0 && isFiltering &&\r\n          <div> No Pokemans available!</div>\r\n        }\r\n        {filteredPokemons.map((pkmn) => (\r\n          <div key={pkmn.id} onClick={() => navigate(`${pkmn.id}`, { state: { id: pkmn.id, name: pkmn.name } })} className={classes.listItem}>\r\n            <PokemonListItem pkmn={pkmn} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <Outlet />\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      width: '100%',\r\n      textAlign: 'center',\r\n      padding: '32px',\r\n      boxSizing: 'border-box'\r\n    },\r\n    list: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      gap: '30px',\r\n      height: 'calc( 100% - 80px)',\r\n      overflow: 'auto',\r\n      paddingTop: '25px'\r\n    },\r\n    listItem: {\r\n      width: '25%',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      gap: '20px',\r\n      boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n      padding: '15px',\r\n      '&:hover': {\r\n        background: '#171e2b',\r\n        filter: 'brightness(120%)',\r\n        cursor: 'pointer'\r\n      }\r\n    },\r\n    '@media only screen and (max-width: 768px)': {\r\n      list: {\r\n        padding: '10px',\r\n        gap: '10px',\r\n      },\r\n      listItem: {\r\n        width: '100%',\r\n        padding: '5px',\r\n      }\r\n    }\r\n  },\r\n  { name: 'PokemonList' }\r\n);\r\n","import {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  HttpLink,\r\n  ApolloLink,\r\n} from '@apollo/client';\r\n\r\nexport const client = new ApolloClient({\r\n  link: ApolloLink.from([\r\n    new HttpLink({\r\n      uri: 'https://graphql-pokemon2.vercel.app',\r\n    }),\r\n  ]),\r\n  cache: new InMemoryCache({}),\r\n});\r\n","import React from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport { PokemonList } from '../components';\r\n\r\nexport const ListPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <PokemonList />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  { name: 'ListPage' }\r\n);\r\n","export default __webpack_public_path__ + \"static/media/README.c59c9cb4.md\";","import React, { useEffect, useState } from 'react';\r\nimport { createUseStyles } from 'react-jss';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport README from '../README.md';\r\n\r\nexport const Home = () => {\r\n  const classes = useStyles();\r\n  const [markdown, setMarkdown] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetch(README)\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        setMarkdown(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ReactMarkdown>{markdown}</ReactMarkdown>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      minWidth: '100%',\r\n      minHeight: '100%',\r\n      padding: '24px 20%',\r\n      boxSizing: 'border-box',\r\n      '& p': {\r\n        color: 'rgba(255,255,255,.68)',\r\n      },\r\n      '& hr': {\r\n        margin: '24px 0px',\r\n        borderTop: '1px solid rgba(255,255,255,.3)',\r\n        borderBottom: '0px',\r\n        borderLeft: '0px',\r\n        borderRight: '0px',\r\n      },\r\n      '& p, & li': {\r\n        lineHeight: '24px',\r\n      },\r\n      '& li': {\r\n        marginTop: '12px',\r\n      },\r\n    },\r\n    '@media (min-width: 1024px)': {\r\n      root: {\r\n        padding: '24px 32px',\r\n      },\r\n    },\r\n  },\r\n  { name: 'Home' }\r\n);\r\n","import { useMemo } from 'react';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport { PokemonDetails } from '../models/pokemonModels';\r\n\r\n\r\n\r\nexport const GET_POKEMON_DETAILS = gql`\r\nquery pokemon($id: String, $name: String){\r\n    pokemon(id: $id, name: $name){\r\n      id\r\n      number\r\n      name\r\n      weight{\r\n        minimum\r\n        maximum\r\n      }\r\n      height{\r\n        minimum\r\n        maximum\r\n      }\r\n      classification\r\n      types\r\n      resistant\r\n      weaknesses\r\n      fleeRate\r\n      maxCP\r\n      maxHP\r\n      image\r\n    }\r\n}\r\n`;\r\n\r\nexport const useGetPokemonDetails = (id: string, name: string) => {\r\n    const { data, ...queryRes } = useQuery(GET_POKEMON_DETAILS, {\r\n        variables: {\r\n            id,\r\n            name\r\n        },\r\n    });\r\n\r\n    const pokemonDetails: PokemonDetails = useMemo(() => data?.pokemon || {}, [data]);\r\n\r\n    return {\r\n        pokemonDetails,\r\n        ...queryRes,\r\n    };\r\n};\r\n","import { createUseStyles } from 'react-jss';\r\nimport { PokemonDetails } from '../../models/pokemonModels';\r\n\r\ninterface DetailFieldsProps {\r\n    pokemonDetails: PokemonDetails\r\n}\r\n\r\ntype FieldDetail = {\r\n    label: string;\r\n    value: string | number;\r\n};\r\n\r\nexport const DetailFields: React.FC<DetailFieldsProps> = ({ pokemonDetails }) => {\r\n    const classes = useStyles();\r\n\r\n    const fieldDetails: FieldDetail[] = [\r\n        {\r\n            label: 'Number',\r\n            value: pokemonDetails.number,\r\n        },\r\n        {\r\n            label: 'Weight Range',\r\n            value: `${pokemonDetails.weight.minimum} - ${pokemonDetails.weight.maximum}`,\r\n        },\r\n        {\r\n            label: 'Height Range',\r\n            value: `${pokemonDetails.height.minimum} - ${pokemonDetails.height.maximum}`\r\n        },\r\n        {\r\n            label: 'Classification',\r\n            value: pokemonDetails.classification,\r\n        },\r\n        {\r\n            label: 'Types',\r\n            value: pokemonDetails.types.join(', '),\r\n        },\r\n        {\r\n            label: 'Resistant',\r\n            value: pokemonDetails.resistant.join(', '),\r\n        },\r\n        {\r\n            label: 'Weaknesses',\r\n            value: pokemonDetails.weaknesses.join(', '),\r\n        },\r\n        {\r\n            label: 'Max-Cp',\r\n            value: pokemonDetails.maxCP,\r\n        },\r\n        {\r\n            label: 'Max-Hp',\r\n            value: pokemonDetails.maxHP,\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            {\r\n                fieldDetails.map(({ label, value }) => {\r\n                    return <div className={classes.field} key={label}>\r\n                        <span className={classes.label}> {label} : </span>\r\n                        <span className={classes.value}>{value}</span>\r\n                    </div>\r\n                })\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n    {\r\n\r\n        field: {\r\n            display: 'flex',\r\n            gap: '10px'\r\n        },\r\n        label: {\r\n            color: '#00acc1',\r\n            width: '40%'\r\n        },\r\n        value: {\r\n            width: '60%',\r\n            color: 'rgba(255,255,255,.68)'\r\n        },\r\n    },\r\n    { name: 'Field' }\r\n);\r\n","import { createUseStyles } from 'react-jss';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { useGetPokemonDetails } from '../../hooks/useGetPokemonDetails';\r\nimport { Loader } from '../generic/Loader';\r\nimport { DetailFields } from './DetailFields';\r\n\r\n\r\n\r\nexport const PokemonDetails = () => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n\r\n    // in case we refresh page we won't have state of route hence taking id from params instead\r\n    const id = location.state?.id || params.id; // null check as state could be null in case of refresh\r\n    const name = location.state?.name; // null check as state could be null in case of refresh\r\n\r\n    const { pokemonDetails, loading } = useGetPokemonDetails(id, name);\r\n\r\n    return (\r\n        <>\r\n            <div onClick={() => navigate('/pokemon')} className={classes.modalContainer}>\r\n                <div onClick={(e) => e.stopPropagation()} className={classes.modalBody}>\r\n                    <span onClick={() => navigate('/pokemon')} className=\"material-icons\">close</span>\r\n                    {loading && <Loader />}\r\n                    {!loading && !pokemonDetails.id && <h3> Details Not Found!</h3>}\r\n                    <>\r\n                        {\r\n                            !loading && pokemonDetails.id &&\r\n                            <div className={classes.details}>\r\n                                <div className={classes.avatar}>\r\n                                    <img src={pokemonDetails.image} alt={pokemonDetails.name} />\r\n                                </div>\r\n                                <div className={classes.divider}></div>\r\n                                <div className={classes.info}>\r\n                                    <h2>{pokemonDetails.name}</h2>\r\n                                    <DetailFields pokemonDetails={pokemonDetails} />\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst useStyles = createUseStyles(\r\n    {\r\n        modalContainer: {\r\n            width: '100vw',\r\n            height: '100vh',\r\n            position: 'fixed',\r\n            background: 'rgba(0,0,0,0.5)',\r\n            top: '0',\r\n            left: '0',\r\n            overflow: 'auto',\r\n            zIndex: '101'\r\n        },\r\n        modalBody: {\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '50%',\r\n            width: '50vw',\r\n            height: '400px',\r\n            transform: 'translate(-50%,-50%)',\r\n            background: '#171e2b',\r\n            boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n            padding: '35px',\r\n            '& span.material-icons': {\r\n                position: 'absolute',\r\n                top: '7px',\r\n                right: '7px',\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        details: {\r\n            boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n            display: 'flex',\r\n            gap: '10px',\r\n            height: '100%'\r\n        },\r\n        avatar: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            '& img': {\r\n                width: '90%',\r\n                height: '90%',\r\n            }\r\n        },\r\n        divider: {\r\n            boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n            width: '0px',\r\n            height: '100%'\r\n        },\r\n        info: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '10px',\r\n            padding: '10px'\r\n        },\r\n        '@media only screen and (max-width: 768px)': {\r\n            modalBody: {\r\n                width: '80vw',\r\n                zIndex: '101',\r\n                padding: '20px',\r\n                top: '35%',\r\n                height: '60%',\r\n                '& span.material-icons': {\r\n                    fontSize: '18px',\r\n                    top: '0',\r\n                    right: '0'\r\n                }\r\n            },\r\n            details: {\r\n                boxShadow: '0px 0px 1px 1px rgb(255 255 255 / 10%)',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '10px',\r\n                height: '100%'\r\n            },\r\n            avatar: {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                '& img': {\r\n                    width: '60%',\r\n                }\r\n            },\r\n            info: {\r\n                gap: '5px',\r\n                padding: '10px',\r\n                '& h2': {\r\n                    fontSize: '18px',\r\n                },\r\n                fontSize: '14px'\r\n            },\r\n            divider: {\r\n                width: '100%',\r\n                height: '0px'\r\n            },\r\n        }\r\n    },\r\n    { name: 'PokemonDetails' }\r\n);\r\n","import { createUseStyles } from 'react-jss';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { LayoutProvider } from '../contexts';\r\nimport { Nav } from '../components';\r\nimport { ApolloProvider } from '@apollo/client';\r\nimport { client } from './client';\r\nimport { ListPage, Home } from '../screens';\r\nimport { PokemonDetails } from '../components/PokemonDetails';\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <LayoutProvider>\r\n        <div className={classes.root}>\r\n          <BrowserRouter>\r\n            <Nav />\r\n            <div className={classes.content}>\r\n              <div className={classes.scrollableArea}>\r\n                <Routes>\r\n                  <Route path=\"/\" element={<Navigate to=\"/pokemon-list\" />} />\r\n                  <Route path=\"/pokemon-list\" element={<Home />} />\r\n                  <Route path=\"/pokemon-list/pokemon\" element={<ListPage />} >\r\n                    <Route path=\"/pokemon-list/pokemon/:id\" element={<PokemonDetails />} />\r\n                  </Route>\r\n                </Routes>\r\n              </div>\r\n            </div>\r\n          </BrowserRouter>\r\n        </div>\r\n      </LayoutProvider>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nconst useStyles = createUseStyles(\r\n  {\r\n    root: {\r\n      background: '#171E2b',\r\n      minHeight: '100vh',\r\n      minWidth: '100vw',\r\n      height: '100%',\r\n      width: '100%',\r\n      display: 'flex',\r\n    },\r\n    content: {\r\n      flex: '1',\r\n      overflow: 'hidden',\r\n      position: 'relative',\r\n    },\r\n    scrollableArea: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      overflow: 'auto',\r\n    },\r\n  },\r\n  { name: 'App' }\r\n);\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './app/reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}